(async()=>{(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))i(n);new MutationObserver(n=>{for(const t of n)if(t.type==="childList")for(const c of t.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&i(c)}).observe(document,{childList:!0,subtree:!0});function s(n){const t={};return n.integrity&&(t.integrity=n.integrity),n.referrerPolicy&&(t.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?t.credentials="include":n.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function i(n){if(n.ep)return;n.ep=!0;const t=s(n);fetch(n.href,t)}})();let o;function l(e){return o.fibonacci_rust(e)}async function A(e,s){if(typeof Response=="function"&&e instanceof Response){if(typeof WebAssembly.instantiateStreaming=="function")try{return await WebAssembly.instantiateStreaming(e,s)}catch(n){if(e.headers.get("Content-Type")!="application/wasm")console.warn("`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\n",n);else throw n}const i=await e.arrayBuffer();return await WebAssembly.instantiate(i,s)}else{const i=await WebAssembly.instantiate(e,s);return i instanceof WebAssembly.Instance?{instance:i,module:e}:i}}function u(){const e={};return e.wbg={},e}function f(e,s){return o=e.exports,a.__wbindgen_wasm_module=s,o}async function a(e){if(o!==void 0)return o;typeof e>"u"&&(e=new URL("data:application/wasm;base64,AGFzbQEAAAABBgFgAX8BfgMDAgAABQMBABEHGwIGbWVtb3J5AgAOZmlib25hY2NpX3J1c3QAAQo6AjECAX4BfyAAQQJOBEADQCAAQQFrEAAgAXwhASAAQQNLIABBAmshAA0ACwsgASAArHwLBgAgABAACwBvCXByb2R1Y2VycwIIbGFuZ3VhZ2UBBFJ1c3QADHByb2Nlc3NlZC1ieQMFcnVzdGMdMS43NS4wICg4MmUxNjA4ZGYgMjAyMy0xMi0yMSkGd2FscnVzBjAuMjAuMwx3YXNtLWJpbmRnZW4GMC4yLjkwACwPdGFyZ2V0X2ZlYXR1cmVzAisPbXV0YWJsZS1nbG9iYWxzKwhzaWduLWV4dA==",import.meta.url));const s=u();(typeof e=="string"||typeof Request=="function"&&e instanceof Request||typeof URL=="function"&&e instanceof URL)&&(e=fetch(e));const{instance:i,module:n}=await A(await e,s);return f(i,n)}const r=e=>e<=1?e:r(e-1)+r(e-2);await a(),console.time("fibonacci_rust"),console.log(l(50)),console.timeEnd("fibonacci_rust"),console.time("fibonacci_js"),console.log(r(50)),console.timeEnd("fibonacci_js")})();
